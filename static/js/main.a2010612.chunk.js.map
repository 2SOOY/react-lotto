{"version":3,"sources":["components/shared/Button/Button.style.js","components/shared/Button/Button.js","components/shared/Modal/Modal.style.js","components/shared/Modal/Modal.js","components/App.style.js","components/LottoPurchaseForm/LottoPurchaseForm.style.js","constants/lotto.js","hooks/useLotto.js","utils/index.js","hooks/useInput.js","hooks/useModal.js","constants/messages.js","components/LottoPurchaseForm/LottoPurchaseForm.js","components/lottoPurchaseResult/PurchaseResult.style.js","components/lottoPurchaseResult/LottoIconList.style.js","components/lottoPurchaseResult/LottoItem.style.js","components/lottoPurchaseResult/LottoItem.js","components/lottoPurchaseResult/LottoIconList.js","components/lottoPurchaseResult/LottoDetailList.style.js","components/lottoPurchaseResult/LottoDetailList.js","components/lottoPurchaseResult/ToggleButton.style.js","components/lottoPurchaseResult/ToggleButton.js","components/lottoPurchaseResult/PurchaseResult.js","components/lottoWinningNumber/WinningNumberForm.style.js","components/lottoWinningNumber/NumberList.style.js","components/lottoWinningNumber/NumberList.js","components/lottoWinningNumber/BonusNumberInput.style.js","components/lottoWinningNumber/BonusNumberInput.js","components/lottoWinningNumber/WinningNumberForm.js","components/lottoRewardResult/RewardResultTable.style.js","services/winningResult.js","components/lottoRewardResult/RewardResultTable.js","components/lottoRewardResult/RestartButton.style.js","components/lottoRewardResult/RestartButton.js","components/lottoRewardResult/RewardModalInner.js","components/App.js","components/GlobalStyle.js","index.js"],"names":["ButtonSize","small","css","medium","large","StyledButton","styled","button","size","Button","children","props","ModalSection","section","ModalInnerDiv","div","ModalCloseButton","ModalCloseIcon","viewBox","d","Modal","onCloseModal","closeModal","role","aria-modal","aria-labelledby","onClick","type","aria-label","Main","main","MainWrapperDiv","WidthFullDiv","PurchaseInputForm","form","PurchaseFormFlexDiv","PurchaseInput","input","LOTTO","RANK","PROFIT","MATCH_COUNT","RESULT_TABLE","useLotto","useState","lottos","setLottos","isPurchased","length","purchaseLotto","price","lottoCount","Math","floor","Array","from","start","end","lotto","Set","add","random","sort","a","b","useInput","defaultValue","value","setValue","e","target","useModal","opened","isModalOpened","setIsModalOpened","currentTarget","openModal","MESSAGE","LottoPurchaseForm","onChangePrice","clearValue","useEffect","onSubmit","preventDefault","htmlFor","name","onChange","placeholder","min","max","step","required","PurchaseResultSection","PurchaseResultMessageDiv","LottoIconListUl","ul","LottoItemLi","li","LottoNumbersSpan","span","LottoItem","join","LottoIconList","_","idx","LottoDetailListUl","LottoDetailList","map","ToggleButtonDiv","ToggleButtonInput","ToggleButtonLabel","label","ToggleButtonSpan","ToggleButton","setChecked","id","checked","PurchaseResult","WinningNumberSelectForm","NumberListUl","WinningNumberLabel","WinningNumberCheckbox","NumberList","numbers","pickNumber","num","includes","alert","propType","PropTypes","array","isRequired","func","BonusNumberInputWrapperDiv","NumberInputDiv","NumberInput","BonusNumberInput","changeBonusNumber","Number","WinningNumberForm","winningNumbers","setWinningNumbers","bonusNumber","newNumbers","filter","n","concat","RewardResultTitle","h2","RewardResultWrapperDiv","RewardTable","table","ProfitMessage","p","getTotalProfit","counts","totalProfit","count","reduce","sum","getProfit","getRank","cost","rank","RewardResultTable","isMatchedBonus","number","getMatchedCounts","ranks","getRanks","profitResults","Object","values","matchingCount","reward","wins","forEach","getLottoProfitResult","toFixed","RestartButtonWrapperDiv","RestartButton","restart","RewardModalInner","App","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2010612.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst ButtonSize = {\n  small: css`\n    min-width: 64px;\n  `,\n  medium: css`\n    min-width: 128px;\n  `,\n  large: css`\n    min-width: 320px;\n  `,\n};\n\nexport const StyledButton = styled.button`\n  height: 36px;\n  padding: 0 16px;\n  border-radius: 4px;\n  outline: 0;\n  border-style: none;\n  cursor: pointer;\n  background-color: #c71f1f;\n  border-color: #c71f1f;\n  color: #fce9e9;\n\n  ${({ size }) => ButtonSize[size]};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledButton } from './Button.style';\n\nconst Button = ({ children, size = 'small', ...props }) => {\n  return (\n    <StyledButton size={size} {...props}>\n      {children}\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const ModalSection = styled.section`\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  transition: opacity 0.25s ease;\n  z-index: 2;\n`;\n\nexport const ModalInnerDiv = styled.div`\n  transition: top 0.25s ease;\n  max-width: 350px;\n  margin: auto;\n  padding: 2.5rem;\n  overflow: auto;\n  background: #fff;\n  border-radius: 5px;\n  position: relative;\n\n  @media screen and (max-width: 768px) {\n    .modal-inner {\n      width: 90%;\n      height: 90%;\n      box-sizing: border-box;\n    }\n  }\n`;\n\nexport const ModalCloseButton = styled.button`\n  padding: 0;\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 40px;\n  top: 40px;\n  cursor: pointer;\n\n  & svg {\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n\n    & path {\n      stroke: gray;\n      fill: transparent;\n      stroke-linecap: round;\n      stroke-width: 5;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ModalSection, ModalInnerDiv, ModalCloseButton } from './Modal.style';\n\nexport const Modal = ({ children, onCloseModal, closeModal }) => {\n  return (\n    <ModalSection\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby=\"title-dialog\"\n      onClick={onCloseModal}\n    >\n      <ModalInnerDiv>\n        <ModalCloseButton\n          type=\"button\"\n          aria-label=\"close-button\"\n          onClick={() => {\n            closeModal();\n          }}\n        >\n          <ModalCloseIcon />\n        </ModalCloseButton>\n        {children}\n      </ModalInnerDiv>\n    </ModalSection>\n  );\n};\n\nconst ModalCloseIcon = () => {\n  return (\n    <svg viewBox=\"0 0 40 40\">\n      <path d=\"M 10, 10 L 30,30 M 30,10 L 10,30\" />\n    </svg>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  max-width: 450px;\n  margin: 0 auto;\n\n  & h1 {\n    text-align: center;\n  }\n`;\n\nexport const MainWrapperDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nexport const WidthFullDiv = styled.div`\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const PurchaseInputForm = styled.form`\n  margin: 0.5rem;\n\n  & label {\n    display: inline-block;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nexport const PurchaseFormFlexDiv = styled.div`\n  display: flex;\n`;\n\nexport const PurchaseInput = styled.input`\n  width: 100%;\n  margin-right: 0.2rem;\n  padding-left: 0.5rem;\n`;\n","export const LOTTO = {\n  UNIT: 1000,\n  BUNDLE_SIZE: 6,\n  START_NUM: 1,\n  END_NUM: 45,\n  MIN_PRICE: 1000,\n  MAX_PRICE: 50000,\n};\n\nexport const RANK = {\n  FIRST: 1,\n  SECOND: 2,\n  THIRD: 3,\n  FOURTH: 4,\n  FIFTH: 5,\n  OTHER: 0,\n};\n\nexport const PROFIT = {\n  FIRST: 2000000000,\n  SECOND: 30000000,\n  THIRD: 1500000,\n  FOURTH: 50000,\n  FIFTH: 5000,\n  OTHER: 0,\n};\n\nexport const MATCH_COUNT = {\n  BONUS: 0.5,\n  ONE: 1,\n  TWO: 2,\n  THREE: 3,\n  FOUR: 4,\n  FIVE: 5,\n  FIVE_BONUS: 5.5,\n  SIX: 6,\n};\n\nexport const RESULT_TABLE = {\n  FIRST: {\n    MATCH_COUNT: '6개',\n    PROFIT: '2,000,000,000',\n  },\n  SECOND: {\n    MATCH_COUNT: '5개 + 보너스볼',\n    PROFIT: '30,000,000',\n  },\n  THIRD: {\n    MATCH_COUNT: '5개',\n    PROFIT: '1,500,000',\n  },\n  FOURTH: {\n    MATCH_COUNT: '4개',\n    PROFIT: '50,000',\n  },\n  FIFTH: {\n    MATCH_COUNT: '3개',\n    PROFIT: '5,000',\n  },\n};\n","import { useState } from 'react';\nimport { LOTTO } from '../constants/lotto';\nimport { getRandomNumber } from '../utils';\n\nconst useLotto = () => {\n  const [lottos, setLottos] = useState([]);\n  const isPurchased = lottos.length > 0;\n\n  const purchaseLotto = price => {\n    const lottoCount = Math.floor(price / LOTTO.UNIT);\n\n    const lottos = Array.from({ length: lottoCount }, () => {\n      const lotto = new Set();\n      while (lotto.size < LOTTO.BUNDLE_SIZE) {\n        lotto.add(getRandomNumber(LOTTO.START_NUM, LOTTO.END_NUM));\n      }\n      return [...lotto].sort((a, b) => a - b);\n    });\n\n    setLottos(lottos);\n  };\n\n  return {\n    lottos,\n    setLottos,\n    isPurchased,\n    purchaseLotto,\n  };\n};\n\nexport default useLotto;\n","export const getRandomNumber = (start, end) =>\n  Math.floor(Math.random() * end) + start;\n","import { useState } from 'react';\n\nconst useInput = defaultValue => {\n  const [value, setValue] = useState(defaultValue);\n\n  const onChangeValue = e => {\n    setValue(e.target.value);\n  };\n\n  const clearValue = () => {\n    setValue(defaultValue);\n  };\n\n  return [value, onChangeValue, clearValue];\n};\n\nexport default useInput;\n","import { useState } from 'react';\n\nconst useModal = (opened = false) => {\n  const [isModalOpened, setIsModalOpened] = useState(opened);\n\n  const onCloseModal = e => {\n    if (e.target === e.currentTarget) {\n      setIsModalOpened(false);\n    }\n  };\n\n  const openModal = () => {\n    setIsModalOpened(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpened(false);\n  };\n\n  return {\n    isModalOpened,\n    onCloseModal,\n    openModal,\n    closeModal,\n  };\n};\n\nexport default useModal;\n","export const MESSAGE = {\n  SELECT_WINNING_NUMBER: '6개의 번호를 선택해주세요',\n  DUPLICATED_WINNING_NUMBER: '보너스 번호는 중복된 번호입니다.',\n  EXCEEDED_LOTTO_COUNT: '이미 6개의 숫자를 선택하였습니다.',\n  CONFIRM_RESTART: '다시 시작하시겠습니까?',\n  INPUT_PLACEHOLDER: '1,000원 단위로 입력해주세요',\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../shared/';\nimport {\n  PurchaseInputForm,\n  PurchaseFormFlexDiv,\n  PurchaseInput,\n} from './LottoPurchaseForm.style';\nimport { useInput } from '../../hooks';\nimport { LOTTO } from '../../constants/lotto';\nimport { MESSAGE } from '../../constants/messages';\n\nexport const LottoPurchaseForm = ({ purchaseLotto, isPurchased }) => {\n  const [price, onChangePrice, clearValue] = useInput(0);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    purchaseLotto(price);\n  };\n\n  useEffect(() => {\n    if (!isPurchased) {\n      clearValue();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPurchased]);\n\n  return (\n    <PurchaseInputForm onSubmit={onSubmit}>\n      <label htmlFor=\"input-price\">구입할 금액을 입력해주세요.</label>\n      <PurchaseFormFlexDiv>\n        <PurchaseInput\n          type=\"number\"\n          name=\"price\"\n          value={price}\n          onChange={onChangePrice}\n          placeholder={MESSAGE.INPUT_PLACEHOLDER}\n          min={LOTTO.MIN_PRICE}\n          max={LOTTO.MAX_PRICE}\n          step={LOTTO.UNIT}\n          required\n        />\n        <Button>확인</Button>\n      </PurchaseFormFlexDiv>\n    </PurchaseInputForm>\n  );\n};\n\nLottoPurchaseForm.propTypes = {\n  purchaseLotto: PropTypes.func.isRequired,\n  isPurchased: PropTypes.bool.isRequired,\n};\n\nexport default LottoPurchaseForm;\n","import styled from 'styled-components';\n\nexport const PurchaseResultSection = styled.section`\n  margin: 2rem 0.5rem 0.5rem;\n`;\n\nexport const PurchaseResultMessageDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const LottoIconListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import styled from 'styled-components';\n\nexport const LottoItemLi = styled.li`\n  display: flex;\n  margin-left: 0.25rem;\n  margin-right: 0.25rem;\n  font-size: 2.25rem;\n  line-height: 2.5rem;\n`;\n\nexport const LottoNumbersSpan = styled.span`\n  font-size: 1.25rem;\n  margin-left: 12px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LottoItemLi, LottoNumbersSpan } from './LottoItem.style';\n\nexport const LottoItem = ({ lotto }) => {\n  return (\n    <LottoItemLi>\n      <span>🎟️ </span>\n      {lotto && <LottoNumbersSpan>{lotto.join(' ')}</LottoNumbersSpan>}\n    </LottoItemLi>\n  );\n};\n\nLottoItem.propTypes = {\n  lotto: PropTypes.array.isRequired,\n};\n\nexport default LottoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LottoIconListUl } from './LottoIconList.style';\nimport LottoItem from './LottoItem';\n\nexport const LottoIconList = ({ lottoCount }) => {\n  return (\n    <LottoIconListUl>\n      {Array.from({ length: lottoCount }, (_, idx) => (\n        <LottoItem key={idx} />\n      ))}\n    </LottoIconListUl>\n  );\n};\n\nLottoIconList.propTypes = {\n  lottoCount: PropTypes.number.isRequired,\n};\n\nexport default LottoIconList;\n","import styled from 'styled-components';\n\nexport const LottoDetailListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 1.2rem;\n  padding: 0.6rem;\n  max-height: 200px;\n  overflow-y: auto;\n  border: 0.5px solid #e9e2e2;\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LottoDetailListUl } from './LottoDetailList.style';\nimport LottoItem from './LottoItem';\n\nexport const LottoDetailList = ({ lottos }) => {\n  return (\n    <LottoDetailListUl>\n      {lottos.map((lotto, idx) => (\n        <LottoItem key={idx} lotto={lotto} />\n      ))}\n    </LottoDetailListUl>\n  );\n};\n\nLottoDetailList.propTypes = {\n  lottos: PropTypes.array.isRequired,\n};\n\nexport default LottoDetailList;\n","import styled from 'styled-components';\n\nexport const ToggleButtonDiv = styled.div`\n  display: flex;\n  align-items: center;\n  padding-right: 0.1rem;\n`;\n\nexport const ToggleButtonInput = styled.input`\n  position: absolute;\n  opacity: 0;\n\n  &:checked + label #show-number-span {\n    background-color: #c71f1f;\n  }\n\n  &:checked + label #show-number-span:after {\n    left: calc(100% - 22px);\n    box-shadow: 1px 3px 4px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const ToggleButtonLabel = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ToggleButtonSpan = styled.span`\n  position: relative;\n  line-height: 2rem;\n  margin-left: 3px;\n  display: block;\n  width: 50px;\n  height: 26px;\n  border-radius: 60px;\n  background-color: #d3c5c5;\n  transition: background 0.4s;\n\n  &:after {\n    content: '';\n    position: absolute;\n    left: 4px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 18px;\n    height: 18px;\n    border-radius: 100%;\n    background-color: #ffffff;\n    box-shadow: 1px 3px 4px rgba(0, 0, 0, 0.2);\n    transition: all 0.4s;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToggleButtonDiv,\n  ToggleButtonInput,\n  ToggleButtonLabel,\n  ToggleButtonSpan,\n} from './ToggleButton.style';\n\nexport const ToggleButton = ({ setChecked }) => {\n  const onChange = e => {\n    setChecked(e.target.checked);\n  };\n\n  return (\n    <ToggleButtonDiv>\n      <ToggleButtonInput\n        id=\"show-details\"\n        onChange={onChange}\n        type=\"checkbox\"\n      />\n\n      <ToggleButtonLabel htmlFor=\"show-details\">\n        <span>번호보기</span>\n        <ToggleButtonSpan id=\"show-number-span\"></ToggleButtonSpan>\n      </ToggleButtonLabel>\n    </ToggleButtonDiv>\n  );\n};\n\nToggleButton.propTypes = {\n  setChecked: PropTypes.func.isRequired,\n};\n\nexport default ToggleButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PurchaseResultSection,\n  PurchaseResultMessageDiv,\n} from './PurchaseResult.style';\nimport LottoIconList from './LottoIconList';\nimport LottoDetailList from './LottoDetailList';\nimport ToggleButton from './ToggleButton';\n\nexport const PurchaseResult = ({ lottos }) => {\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <PurchaseResultSection aria-label=\"purchase-lotto\">\n      <PurchaseResultMessageDiv>\n        <label>\n          총 <span>{lottos.length}</span>개를 구매하였습니다.\n        </label>\n        <ToggleButton setChecked={setChecked} />\n      </PurchaseResultMessageDiv>\n\n      {checked ? (\n        <LottoDetailList lottos={lottos} />\n      ) : (\n        <LottoIconList lottoCount={lottos.length} />\n      )}\n    </PurchaseResultSection>\n  );\n};\n\nPurchaseResult.propTypes = {\n  lottos: PropTypes.array.isRequired,\n};\n\nexport default PurchaseResult;\n","import styled from 'styled-components';\n\nexport const WinningNumberSelectForm = styled.form`\n  margin: 2rem 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem 0;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1), 0 6px 6px rgba(0, 0, 0, 0.1);\n  border: 0.5px solid rgba(233, 226, 226, 0.3);\n\n  & h2 {\n    margin-top: 0.5rem;\n    margin-bottom: 0;\n    font-size: 1.5rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const NumberListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 95%;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const WinningNumberLabel = styled.label`\n  display: inline-block;\n  position: relative;\n  width: 1.5rem;\n  height: 1.5rem;\n  line-height: 1.5rem;\n  margin: 4px;\n  padding: 4px;\n  font-size: 1rem;\n  text-align: center;\n  border: 2px solid #d3c5c5;\n  border-radius: 50%;\n  background-color: #d3c5c5;\n\n  &:hover {\n    box-sizing: content-box;\n    border: 2px solid #c71f1f;\n  }\n`;\n\nexport const WinningNumberCheckbox = styled.input`\n  position: absolute;\n  opacity: 0;\n\n  &:checked + ${WinningNumberLabel} {\n    border: 2px solid #c71f1f;\n    background-color: #c71f1f;\n    color: #fce9e9;\n    font-weight: bold;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  NumberListUl,\n  WinningNumberCheckbox,\n  WinningNumberLabel,\n} from './NumberList.style';\nimport { LOTTO } from '../../constants/lotto';\nimport { MESSAGE } from '../../constants/messages';\n\nexport const NumberList = ({ numbers, pickNumber }) => {\n  const onPickNumber = num => e => {\n    if (numbers.length === LOTTO.BUNDLE_SIZE && !numbers.includes(num)) {\n      alert(MESSAGE.EXCEEDED_LOTTO_COUNT);\n      return;\n    }\n\n    pickNumber(num);\n  };\n\n  return (\n    <NumberListUl>\n      {Array.from({ length: LOTTO.END_NUM }, (_, idx) => {\n        return (\n          <li key={idx + 1}>\n            <WinningNumberCheckbox\n              type=\"checkbox\"\n              id={`winningNumber${idx + 1}`}\n              name={idx + 1}\n              onChange={onPickNumber(idx + 1)}\n              checked={numbers.includes(idx + 1)}\n            />\n            <WinningNumberLabel htmlFor={`winningNumber${idx + 1}`}>\n              {idx + 1}\n            </WinningNumberLabel>\n          </li>\n        );\n      })}\n    </NumberListUl>\n  );\n};\n\nNumberList.propType = {\n  numbers: PropTypes.array.isRequired,\n  pickNumber: PropTypes.func.isRequired,\n};\n\nexport default NumberList;\n","import styled from 'styled-components';\n\nexport const BonusNumberInputWrapperDiv = styled.div`\n  margin-bottom: 1rem;\n\n  & p {\n    margin-top: 1rem;\n    margin-bottom: 0.2rem;\n    text-align: center;\n    font-weight: bold;\n  }\n`;\n\nexport const NumberInputDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const NumberInput = styled.input`\n  margin-right: 0.25rem;\n  margin-left: 0.25rem;\n  text-align: center;\n  width: 40px;\n  height: 36px;\n  font-size: 1rem;\n  font-weight: bold;\n  color: #c71f1f;\n\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BonusNumberInputWrapperDiv,\n  NumberInputDiv,\n  NumberInput,\n} from './BonusNumberInput.style';\nimport { LOTTO } from '../../constants/lotto';\n\nexport const BonusNumberInput = ({ changeBonusNumber }) => {\n  const onChange = e => {\n    changeBonusNumber(Number(e.target.value));\n  };\n\n  return (\n    <BonusNumberInputWrapperDiv>\n      <p>보너스 번호</p>\n      <NumberInputDiv>\n        <NumberInput\n          type=\"number\"\n          name=\"bonus-number\"\n          onChange={onChange}\n          aria-label=\"winning number bonus\"\n          min={LOTTO.START_NUM}\n          max={LOTTO.END_NUM}\n          required\n        />\n      </NumberInputDiv>\n    </BonusNumberInputWrapperDiv>\n  );\n};\n\nBonusNumberInput.propTypes = {\n  changeBonusNumber: PropTypes.func.isRequired,\n};\n\nexport default BonusNumberInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../shared';\nimport { WinningNumberSelectForm } from './WinningNumberForm.style';\nimport NumberList from './NumberList';\nimport BonusNumberInput from './BonusNumberInput';\nimport { LOTTO } from '../../constants/lotto';\nimport { MESSAGE } from '../../constants/messages';\n\nexport const WinningNumberForm = ({\n  winningNumbers,\n  setWinningNumbers,\n  openModal,\n}) => {\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (winningNumbers.numbers.length < LOTTO.BUNDLE_SIZE) {\n      alert(MESSAGE.SELECT_WINNING_NUMBER);\n      return;\n    }\n\n    if (winningNumbers.numbers.includes(winningNumbers.bonusNumber)) {\n      alert(MESSAGE.DUPLICATED_WINNING_NUMBER);\n      return;\n    }\n\n    openModal();\n  };\n\n  const pickNumber = num => {\n    const isDuplicated = winningNumbers.numbers.includes(num);\n    const newNumbers = isDuplicated\n      ? winningNumbers.numbers.filter(n => n !== num)\n      : winningNumbers.numbers.concat(num);\n\n    if (newNumbers.length === LOTTO.BUNDLE_SIZE + 1) {\n      return;\n    }\n\n    setWinningNumbers({\n      ...winningNumbers,\n      numbers: newNumbers,\n    });\n  };\n\n  const changeBonusNumber = num => {\n    setWinningNumbers({\n      ...winningNumbers,\n      bonusNumber: num,\n    });\n  };\n\n  return (\n    <WinningNumberSelectForm onSubmit={onSubmit}>\n      <h2>당첨번호 입력하기</h2>\n      <p>당첨 번호 6개를 선택하고, 보너스 번호를 입력해주세요</p>\n      <NumberList pickNumber={pickNumber} numbers={winningNumbers.numbers} />\n      <BonusNumberInput changeBonusNumber={changeBonusNumber} />\n\n      <Button size=\"large\">결과 확인하기</Button>\n    </WinningNumberSelectForm>\n  );\n};\n\nWinningNumberForm.propTypes = {\n  winningNumbers: PropTypes.array.isRequired,\n  setWinningNumbers: PropTypes.func.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n\nexport default WinningNumberForm;\n","import styled from 'styled-components';\n\nexport const RewardResultTitle = styled.h2`\n  text-align: center;\n`;\n\nexport const RewardResultWrapperDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RewardTable = styled.table`\n  border-collapse: collapse;\n  border: 3px solid #eb7a7a;\n\n  & tr {\n    text-align: center;\n\n    & th,\n    td {\n      padding: 0.75rem;\n      border-bottom: 1.5px solid #f5bdbd;\n    }\n  }\n`;\n\nexport const ProfitMessage = styled.p`\n  text-align: center;\n\n  & span {\n    margin: 0 0.3rem;\n    font-weight: bold;\n    color: #c71f1f;\n  }\n`;\n","import {\n  LOTTO,\n  MATCH_COUNT,\n  PROFIT,\n  RANK,\n  RESULT_TABLE,\n} from '../constants/lotto';\n\nexport const getMatchedCounts = (lottos, winningNumbers) => {\n  return lottos.map(lotto => {\n    const isMatchedBonus = lotto.includes(winningNumbers.bonusNumber);\n    let count = lotto.filter(number => winningNumbers.numbers.includes(number))\n      .length;\n\n    if (count === MATCH_COUNT.FIVE && isMatchedBonus) {\n      count += MATCH_COUNT.BONUS;\n    }\n\n    return count;\n  });\n};\n\nexport const getRanks = counts => {\n  return counts.map(getRank);\n};\n\nexport const getTotalProfit = counts => {\n  const totalProfit = counts\n    .filter(count => count !== 0)\n    .reduce((sum, count) => {\n      sum += getProfit(getRank(count));\n      return sum;\n    }, 0);\n\n  const cost = counts.length * LOTTO.UNIT;\n  return ((totalProfit - cost) / cost) * 100;\n};\n\nconst getRank = count => {\n  return (\n    {\n      [MATCH_COUNT.SIX]: RANK.FIRST,\n      [MATCH_COUNT.FIVE_BONUS]: RANK.SECOND,\n      [MATCH_COUNT.FIVE]: RANK.THIRD,\n      [MATCH_COUNT.FOUR]: RANK.FOURTH,\n      [MATCH_COUNT.THREE]: RANK.FIFTH,\n    }[count] || RANK.OTHER\n  );\n};\n\nconst getProfit = rank => {\n  return (\n    {\n      [RANK.FIRST]: PROFIT.FIRST,\n      [RANK.SECOND]: PROFIT.SECOND,\n      [RANK.THIRD]: PROFIT.THIRD,\n      [RANK.FOURTH]: PROFIT.FOURTH,\n      [RANK.FIFTH]: PROFIT.FIFTH,\n    }[rank] || PROFIT.OTHER\n  );\n};\n\nexport const getLottoProfitResult = ranks => {\n  const table = {\n    [RANK.FIRST]: {\n      matchingCount: RESULT_TABLE.FIRST.MATCH_COUNT,\n      reward: RESULT_TABLE.FIRST.PROFIT,\n      wins: 0,\n    },\n    [RANK.SECOND]: {\n      matchingCount: RESULT_TABLE.SECOND.MATCH_COUNT,\n      reward: RESULT_TABLE.SECOND.PROFIT,\n      wins: 0,\n    },\n    [RANK.THIRD]: {\n      matchingCount: RESULT_TABLE.THIRD.MATCH_COUNT,\n      reward: RESULT_TABLE.THIRD.PROFIT,\n      wins: 0,\n    },\n    [RANK.FOURTH]: {\n      matchingCount: RESULT_TABLE.FOURTH.MATCH_COUNT,\n      reward: RESULT_TABLE.SECOND.PROFIT,\n      wins: 0,\n    },\n    [RANK.FIFTH]: {\n      matchingCount: RESULT_TABLE.FIFTH.MATCH_COUNT,\n      reward: RESULT_TABLE.FIFTH.PROFIT,\n      wins: 0,\n    },\n  };\n\n  ranks.forEach(rank => {\n    table[rank] && table[rank].wins++;\n  });\n\n  return table;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  RewardResultTitle,\n  RewardResultWrapperDiv,\n  RewardTable,\n  ProfitMessage,\n} from './RewardResultTable.style';\nimport {\n  getLottoProfitResult,\n  getMatchedCounts,\n  getRanks,\n  getTotalProfit,\n} from '../../services/winningResult';\n\nexport const RewardResultTable = ({ lottos, winningNumbers }) => {\n  const counts = getMatchedCounts(lottos, winningNumbers);\n  const ranks = getRanks(counts);\n  const profitResults = Object.values(getLottoProfitResult(ranks));\n\n  return (\n    <>\n      <RewardResultTitle id=\"title-dialog\">🏆 당첨 통계 🏆</RewardResultTitle>\n      <RewardResultWrapperDiv>\n        <RewardTable>\n          <thead>\n            <tr>\n              <th>일치 갯수</th>\n              <th>당첨금</th>\n              <th>당첨 갯수</th>\n            </tr>\n          </thead>\n          <tbody>\n            {profitResults.map(({ matchingCount, reward, wins }) => (\n              <tr key={matchingCount}>\n                <td>{matchingCount}</td>\n                <td>{reward}</td>\n                <td>\n                  <span>{wins}</span>개\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </RewardTable>\n      </RewardResultWrapperDiv>\n\n      <ProfitMessage>\n        당신의 총 수익률은\n        <span>{getTotalProfit(counts).toFixed(2)}</span>\n        %입니다.\n      </ProfitMessage>\n    </>\n  );\n};\n\nRewardResultTable.propTypes = {\n  lottos: PropTypes.array.isRequired,\n  winningNumbers: PropTypes.shape({\n    numbers: PropTypes.array,\n    bonusNumber: PropTypes.number,\n  }).isRequired,\n};\n\nexport default RewardResultTable;\n","import styled from 'styled-components';\n\nexport const RestartButtonWrapperDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 0.4rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../shared';\nimport { RestartButtonWrapperDiv } from './RestartButton.style';\nimport { MESSAGE } from '../../constants/messages';\n\nexport const RestartButton = ({ restart }) => {\n  const onClick = () => {\n    alert(MESSAGE.CONFIRM_RESTART);\n    restart();\n  };\n\n  return (\n    <RestartButtonWrapperDiv>\n      <Button size=\"medium\" type=\"reset\" onClick={onClick}>\n        다시 시작하기\n      </Button>\n    </RestartButtonWrapperDiv>\n  );\n};\n\nRestartButton.propTypes = {\n  restart: PropTypes.func.isRequired,\n};\n\nexport default RestartButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RewardResultTable from './RewardResultTable';\nimport RestartButton from './RestartButton';\n\nexport const RewardModalInner = ({ lottos, winningNumbers, restart }) => {\n  return (\n    <>\n      <RewardResultTable lottos={lottos} winningNumbers={winningNumbers} />\n      <RestartButton restart={restart} />\n    </>\n  );\n};\n\nRewardModalInner.propTypes = {\n  lottos: PropTypes.array.isRequired,\n  winningNumbers: PropTypes.shape({\n    numbers: PropTypes.array,\n    bonusNumber: PropTypes.number,\n  }).isRequired,\n  restart: PropTypes.func.isRequired,\n};\n\nexport default RewardModalInner;\n","import React, { useState } from 'react';\nimport { Modal } from './shared';\nimport { Main, MainWrapperDiv, WidthFullDiv } from './App.style';\nimport LottoPurchaseForm from './LottoPurchaseForm/LottoPurchaseForm';\nimport PurchaseResult from './lottoPurchaseResult/PurchaseResult';\nimport WinningNumberForm from './lottoWinningNumber/WinningNumberForm';\nimport RewardModalInner from './lottoRewardResult/RewardModalInner';\nimport { useLotto, useModal } from '../hooks';\n\nexport const App = () => {\n  const { isModalOpened, onCloseModal, openModal, closeModal } = useModal();\n  const { lottos, setLottos, isPurchased, purchaseLotto } = useLotto();\n  const [winningNumbers, setWinningNumbers] = useState({\n    numbers: [],\n    bonusNumber: 0,\n  });\n\n  const restart = () => {\n    setLottos([]);\n    setWinningNumbers({\n      numbers: [],\n      bonusNumber: 0,\n    });\n    closeModal();\n  };\n\n  return (\n    <Main>\n      <h1>🎱 행운의 로또</h1>\n      <MainWrapperDiv>\n        <WidthFullDiv>\n          <LottoPurchaseForm\n            purchaseLotto={purchaseLotto}\n            isPurchased={isPurchased}\n          />\n\n          {isPurchased && (\n            <>\n              <PurchaseResult lottos={lottos} />\n              <WinningNumberForm\n                winningNumbers={winningNumbers}\n                setWinningNumbers={setWinningNumbers}\n                openModal={openModal}\n              />\n            </>\n          )}\n        </WidthFullDiv>\n      </MainWrapperDiv>\n\n      {isModalOpened && (\n        <Modal onCloseModal={onCloseModal} closeModal={closeModal}>\n          <RewardModalInner\n            lottos={lottos}\n            winningNumbers={winningNumbers}\n            restart={restart}\n          />\n        </Modal>\n      )}\n    </Main>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport GlobalStyle from './components/GlobalStyle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}